{% extends 'admin/template-listing.html.twig' %}

{% set activeMenu = 'orders' %}
{% set pageTitle = 'Rendelések' %}
{% set breadcrumb = {
    0: {
        'url': path('dashboard'),
        'text': 'dashboard.dashboard'|trans,
    },
} %}

{%- block title -%}
    {{ pageTitle }}
{%- endblock -%}

{% block bodyClass %} order order-list{% endblock %}

{% block modal %}
    <div class="sidebar sidebar-right" id="sidebar--Filters" tabindex="-1" role="dialog" aria-labelledby="sidebarLabel" aria-hidden="true">
        <div class="sidebar-dialog sidebar-dialog-scrollable sidebar-dialog-centered" role="document">
            <div class="sidebar-content">
                <div class="sidebar-header">
                    <h3 class="sidebar-title" id="sidebarLabel">{{ 'order.filter.filters'|trans }}</h3>
                    <button type="button" class="close" data-dismiss="sidebar" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="sidebar-body pb-0">
                    {{ form_start(filterFormSidebar, { 'attr': {'class': 'JS--orderFilters' }}) }}
                            <div class="form-group">
                                <label>{{ 'order.filter.search'|trans }}</label>
                                <div class="field-prepend">
                                    <div class="field-addon-prepend w-addon-sm">
                                        <i class="fas fa-search"></i>
                                    </div>
                                </div>
                                {{ form_widget(filterFormSidebar.searchTerm, {'attr': {'class': 'pl-addon-sm' }}) }}
                            </div>
                            <div class="form-group">
                                <label>{{ 'order.filter.filter-by-date'|trans }}</label>
                                <div class="field-item" id="JS--idosavS">
                                    <div class="field-prepend field-append">
                                        <div class="field-addon-prepend w-addon-sm">
                                            <i class="far fa-calendar-alt mr-0"></i>
                                        </div>
                                    </div>
                                    {{ form_widget(filterFormSidebar.dateRange, { 'attr': {
                                        'class' : 'pl-addon-sm pr-addon-sm bg-transparent custom-date JS--inputDateS',
                                    }}) }}
                                    <div class="field-addon-append w-addon-sm">
                                        <a href="" class="btn btn-link-secondary JS--clearDateS"><i class="far fa-times-circle"></i></a>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label>{{ 'order.filter.filter-by-payment-status'|trans }}</label>
                                <div class="">
                                    {{ form_widget(filterFormSidebar.paymentStatus, {'attr': {'class': '' }}) }}
                                </div>
                            </div>
                            <div class="form-group">
                                <label>{{ 'order.filter.filter-by-order-status'|trans }}</label>
                                <div class="">
                                    {{ form_widget(filterFormSidebar.orderStatus, {'attr': {'class': '' }}) }}
                                </div>
                            </div>
                            <div class="form-group">
                                <label>Törölt rendelések</label>
                                <div class="">
                                    {{ form_widget(filterFormSidebar.isCanceled, {'attr': {'class': ''}, 'placeholder': 'Válassz...' }) }}
                                </div>
{#                                {{ form_widget(filterFormSidebar.isCanceled, {'label_attr': {'class': 'checkbox-custom'}, 'label': 'Törölt rendeléseket is beleértve'}) }}#}
                            </div>
{#                            <div class="form-group">#}
{#                                <div class="">#}
{#                                    <input type="submit" value="{{ 'generic.ok'|trans }}" class="btn btn-secondary px-4" formnovalidate>#}
{#                                </div>#}
{#                            </div>#}

                    <div style="display:none">
                        {{ form_rest(filterFormSidebar) }}
                    </div>
                    {{ form_end(filterFormSidebar) }}
                </div>
                <div class="sidebar-footer">
                    <input type="submit" value="{{ 'generic.apply'|trans }}" onclick="$('.JS--orderFilters').submit();" class="btn btn-primary" formnovalidate>
                    <a href="" class="btn btn-secondary" data-dismiss="sidebar">{{ 'generic.close'|trans }}</a>
                </div>
            </div>
        </div>
    </div>
{% endblock %}

{% block headerActionsWrapper %}
{#    <a href="{{ path('delivery-date-type-edit') }}" class="btn btn-primary">Új rendelés</a>#}
{% endblock %}

{% block contentFilter %}
    <div class="card-body">
        <nav class="adaptive-tabs">
            <ul class="nav nav-tabs adaptive-primary">
                {% for quickLink in filterQuickLinks %}
                    <li class="nav-item adaptive-item">
                        <a href="{{ quickLink['url'] }}" class="nav-link {% if quickLink['active'] is defined and quickLink['active'] %}active{% endif %}">
                            <span class="d-flex justify-content-between align-items-center">
                                <span class="d-flex">{{ quickLink['name'] }}</span>
{#                                        <span class="d-flex ml-2 badge badge-light">{{ quickLink['itemCount'] }}</span>#}
                            </span>
                        </a>
                    </li>
                {% endfor %}
            </ul>
            <ul class="adaptive-template">
                <li class="nav-item adaptive-item adaptive-more">
                    <button type="button" class="adaptive-button nav-link btn btn-link dropdown-toggle" aria-haspopup="true" aria-expanded="false">
                        {#											<i class="fas fa-ellipsis-h"></i>#}
                        {{ 'generic.more'|trans }}
                    </button>
                    <ul class="adaptive-secondary">
                    </ul>
                </li>
            </ul>
        </nav>
    </div>
    <div class="border-top">
    </div>
    <div class="card-body pb-0">
        {{ form_start(filterForm, { 'attr': {'class': 'needs-validationX' }}) }}
        <div class="w-100 d-flex flex-md-row justify-content-between">
            <div class="field-group align-middle flex-md-row mr-2">
                <div class="field-item flex-grow-3">
                    <div class="field-prepend">
                        <div class="field-addon-prepend w-addon-sm">
                            <i class="fas fa-search"></i>
                        </div>
                    </div>
                    {{ form_widget(filterForm.searchTerm, {'attr': {'class' : 'pl-addon-sm'}}) }}
                </div>
                <div class="field-item flex-grow-1 d-none d-md-flex" id="JS--idosav">
                    <div class="field-prepend field-append">
                        <div class="field-addon-prepend w-addon-sm">
                            <i class="far fa-calendar-alt mr-0"></i>
                        </div>
                    </div>
                    {{ form_widget(filterForm.dateRange, { 'attr': {
                        'class' : 'pl-addon-sm pr-addon-sm bg-transparent custom-date JS--inputDate'
                    }}) }}
                    <div class="field-addon-append w-addon-sm">
                        <a href="" class="btn btn-link-secondary JS--clearDate"><i class="far fa-times-circle"></i></a>
                    </div>
                </div>

                <div class="field-item d-none d-md-flex flex-grow-1">
                    {{ form_widget(filterForm.paymentStatus, {'attr': {'class': 'form-control' }}) }}
                </div>
                <div class="field-item d-none d-md-flex flex-grow-1">
                    {{ form_widget(filterForm.orderStatus, {'attr': {'class': 'form-control' }}) }}
                </div>
                <div class="field-item flex-grow-1">
                    <a class="btn btn-secondary w-100 text-nowrap" href="#" data-toggle="sidebar" data-target="#sidebar--Filters">Több szűrő</a>
                </div>
            </div>
            <div class="position-relative">
                <input type="submit" value="{{ 'generic.ok'|trans }}" class="btn btn-secondary w-100">
                {#                    <button onclick="return false" role="button" class="btn btn-secondary px-3" data-toggle="loading-overlay" aria-hidden="true">{{ 'generic.ok'|trans }}</button>#}
            </div>
        </div>
        <div style="display:none">
            {{ form_rest(filterForm) }}
        </div>
        {{ form_end(filterForm) }}
    </div>
    <div class="card-body py-0">
        {% if filterTags is defined and filterTags|length %}
            <div class="vertical-form-row mt-2">
                {% for filterKey,value in filterTags %}
                    {% if value is defined and value is not null %}
                        <div class="vertical-col">
                            <div class="filter-tag">
                                <div class="filter-tag-content">{{ value }}</div>
                                <a href="{{ filterUrls[filterKey] }}" class="filter-tag-button"><i class="fas fa-times mr-0"></i></a>
                            </div>
                        </div>
                    {% endif %}
                {% endfor %}
            </div>
        {% endif %}
    </div>
{% endblock %}

{% block tableHeader %}
    {% if orders is defined and orders is not empty %}
        <tr>
            <th scope="col">Rendelés</th>
            <th scope="col">Dátum</th>
            <th scope="col">Vásárló</th>
            {% if flowerShopMode %}
            <th scope="col">Címzett</th>
            {% endif %}
            <th scope="col">Összesen</th>
            <th scope="col">Fizetés állapota</th>
            <th scope="col">Rendelés állapota</th>
            <th scope="col">Szállítás</th>
            <th scope="col">Fizetési mód</th>
{#            <th scope="col" class="text-center"><i class="fas fa-ellipsis-h"></i></th>#}
        </tr>
    {% endif %}
{% endblock %}

{% block tableBody %}
    {% if orders is defined and orders is not empty %}
        {% for order in orders %}
            <tr {% if order.isCanceled %}style="text-decoration: line-through;"{% endif %}>
                <td class="text-nowrap text-centerX">
{#                    <div class="overlay-container">#}
{#                        <div class="overlay-cell">#}
{#                            <div class="overlay-content">#}
{#                                <div class="text-centerX w-100">#}
{#                                    <a class="btn btn-sm btn-secondary" href="#" data-toggle="modal" data-target="#modal--orderDetail-{{ loop.index }}"><i class="far fa-eye mr-1"></i> Preview</a>#}
{#                                </div>#}
{#                            </div>#}
{#                        </div>#}
                        <div class="d-flex align-items-end flex-column h-100">
                            <div class="align-self-start">
                                <a href="{{ path('order-detail', {'id': order.id}) }}" class="font-weight-bold text-dark mr-1">#{{ order.number|number_format(0, '', '') }}</a>
                                {% if order.hasComment is defined and order.hasComment == true %}
                                    <i class="far fa-comment-dots text-muted"></i>
                                {% endif %}
                            </div>
                        </div>
{#                    </div>#}
                </td>
                <td class="text-nowrap">
                    <span class="">{{ order.createdAt|localizedDate('M j.') }}</span> <br>
                    <small class="text-muted">{{ order.createdAt|localizedDate('l') }}</small>
                </td>
                <td class="text-nowrapX">
                        <span class="">
                            {% if order.customer is defined and order.customer is not null %}
{#                                <a href="{{ path('customer-show', {'id': order.customer.id}) }}">#}
                                    {{ order.billingFullname ? order.billingFullname : '' }}
                                    {% if order.billingCompany is defined and order.billingCompany %}
                                        <br>
                                        {{ order.billingCompany }}
                                    {% endif %}
{#                                </a>#}
                            {% else %}
                                {{ order.billingFullname ? order.billingFullname : '' }} {{ order.billingCompany is defined and order.billingCompany ? '/ ' ~ order.billingCompany : '' }}
                            {% endif %}
                        </span><br>
                    <div class="order-billingInfo">
                        {% if order.billingPhone %}
                            {% set firstSeg = order.billingPhone|slice(0, 2) %}
                            {% set secondSeg = order.billingPhone|slice(2, 2) %}
                            {% set thirdSeg = order.billingPhone|slice(4, 3) %}
                            {% set fourthSeg = order.billingPhone|slice(7, 4) %}

                            {% set phone = firstSeg ~ ' ' ~ secondSeg ~ ' ' ~ thirdSeg ~ ' ' ~ fourthSeg %}
                        {% endif %}
{#                        <span class="text-nowrap">{{ phone is defined ? phone : ''}} </span><br>#}
                    </div>
                </td>
                {% if flowerShopMode %}
                <td class="text-nowrapX">
                    <span class="text-success">{{ order.shippingFullname ? order.shippingFullname : '' }}</span> <br>
                    <div class="order-shippingInfo">
                        {% if order.shippingPhone %}
                            {% set firstSeg = order.shippingPhone|slice(0, 2) %}
                            {% set secondSeg = order.shippingPhone|slice(2, 2) %}
                            {% set thirdSeg = order.shippingPhone|slice(4, 3) %}
                            {% set fourthSeg = order.shippingPhone|slice(7, 4) %}

                            {% set phone = firstSeg ~ ' ' ~ secondSeg ~ ' ' ~ thirdSeg ~ ' ' ~ fourthSeg %}
                        {% endif %}
                        <span class="text-nowrap">{{ phone is defined ? phone : '' }} </span><br>
                        {% if order.shippingAddress %}
                            <span>
                                    {{ order.shippingAddress.street }} <br>
                                    {{ order.shippingAddress.zip }} {{ order.shippingAddress.city }}
                                </span>
                        {% endif %}
                    </div>
                </td>
                {% endif %}
                <td class="text-nowrap">
                    <span class="">{{ order.totalAmountToPay|money }}</span>
                    <br>
                    <small class="text-muted">{{ 'order.items-count'|trans({'{{ count }}': order.itemsCount}) }}</small>
                </td>
                <td class="">
                    {% if order.paymentStatus is defined and order.paymentStatus is not null %}
                        <span class="mr-1 badge badge-{{ order.paymentStatus.css }}">{{ order.paymentStatus }}</span>
                    {% endif %}
                </td>
                <td class="">
                    {% if order.status %}
                        <span class="mr-1 badge badge-{{ order.status.css }}">{{ order.status }}</span>
                    {% endif %}
                </td>
                <td class="text-nowrapX">
                    {% include 'admin/order/_order-delivery-overdue-widget.html.twig' with {'isSizedSm': true, 'showFutureDatesOnly': true} %}
                    <div class="d-flex align-items-end flex-column h-100">
                        <div class="d-flex align-self-start order-deliveryInfo">
                            <em>{{ order.shippingMethod ? order.shippingMethod.getName() : '' }}</em>
                        </div>
                        {% if flowerShopMode %}
                        <div class="d-flex mt-auto justify-content-start align-self-start">
                            {% if order.deliveryDate %}
                                <div class="mr-1">
                                    <i class="far fa-clock mr-1 text-muted-extra"></i>
                                </div>
                                <div class="d-inline-block">
                                    <span class="text-nowrap">{{ order.deliveryDate|localizedDate('Y M j.')|lower }}</span> <br>
                                    <span class="order-deliveryInfo text-nowrap">{{ order.deliveryInterval ? order.deliveryInterval ~ ' óra között': '' }}</span>
                                </div>
                            {% endif %}
                        </div>
                        {% endif %}
                    </div>
                </td>
                <td class="text-nowrap">
                    {% if order.paymentMethod %}
                        {{ order.paymentMethod.shortCode }}
                    {% endif %}
                </td>
{#                <td class="text-center">#}
{#                    <div class="overlay-container">#}
{#                        <div class="overlay-cell">#}
{#                            <div class="overlay-content">#}
{#                                <a class="btn btn-secondary" href="#" data-toggle="modal" data-target="#modal--orderDetail-{{ loop.index }}"><i class="far fa-eye"></i> {{ 'generic.preview'|trans }}</a>#}
{#                                <a href="{{ path('order-detail', {'id': order.id}) }}" class="btn btn-secondary mt-2" target="_blank"><i class="fas fa-external-link-alt"></i> {{ 'generic.open'|trans }}</a>#}
{#                            </div>#}
{#                        </div>#}
{#                        <div class="d-flex align-items-end flex-column h-100 flex-sm-column">#}
{#                            <div class="align-self-center d-flex flex-column">#}
{#                                {% if order.status %}#}
{#                                    <span class="badge badge-{{ order.status.css }}">{{ order.status }}</span>#}
{#                                {% endif %}#}
{#                                {% if order.paymentStatus %}#}
{#                                    <span class="badge badge-{{ order.paymentStatus.css }}">{{ order.paymentStatus }}</span>#}
{#                                {% endif %}#}
{#                            </div>#}
{#                        </div>#}
{#                    </div>#}
{#                </td>#}
            </tr>
        {% endfor %}
    {% endif %}
{% endblock %}


{% block tableEmpty %}
    {% if orders is defined and orders is empty %}
    <div class="h-100 text-center p-4">
        <div class="h1 text-muted-extra">
            <i class="fas fa-search"></i>
        </div>
        <div class="font-18 mt-3 mb-2">Nem talált rendeléseket!</div>
        <div class="text-muted-extra">Próbáld módosítani a szűrőket.</div>
    </div>
    {% endif %}
{% endblock %}



{% block javascripts %}
    {{ parent() }}
    <script>
        $(function() {
            let dateField = $('#JS--idosav .JS--inputDate');
            let dateFieldSidebar = $('#JS--idosavS .JS--inputDateS');
            const drpConfig4FilterBar = Object.assign({}, drpBaseConfig, drpRanges, {
                parentEl: "#JS--idosav",
                opens: 'right',
                // singleDatePicker: true,
                drops: 'down',
                autoApply: true,
                autoUpdateInput: false,
                linkedCalendars: true,
                alwaysShowCalendars: false,
                showCustomRangeLabel: true,
                // showRangesAsDropdown: true,
                maxDate: moment(),
                // showWeekNumbers: true,
                // showDropdowns: true,
                // timePicker: true,
                // timePickerSeconds: true,
                // timePicker24Hour: true,
            });
            const drpConfig4Sidebar = Object.assign({}, drpBaseConfig, drpRanges, {
                parentEl: "#JS--idosavS",
                displayInline: true,
                opens: 'right',
                // singleDatePicker: true,
                drops: 'down',
                autoApply: true,
                autoUpdateInput: false,
                linkedCalendars: true,
                alwaysShowCalendars: false,
                showCustomRangeLabel: true,
                // showRangesAsDropdown: true,
                maxDate: moment(),
                // showWeekNumbers: true,
                // showDropdowns: true,
                // timePicker: true,
                // timePickerSeconds: true,
                // timePicker24Hour: true,
            });
            const format = drpBaseConfig.locale.format; // eg: YYYY-MM-DD
            console.log(format);

            dateField.daterangepicker(drpConfig4FilterBar);
            dateFieldSidebar.daterangepicker(drpConfig4Sidebar);

            // Ha van dateRange a query-ben, akkor a ketto datumot betoltom a datum valasztoba
            let string = "{{ app.request.query.get('dateRange') is defined ? app.request.query.get("dateRange") : false }}";

            if (string) {
                console.log(string);
                picker = dateField.data('daterangepicker');
                picker.setStartDate(moment(string.split(picker.locale.separator)[0], format));
                picker.setEndDate(moment(string.split(picker.locale.separator)[1], format));

                pickerS = dateFieldSidebar.data('daterangepicker');
                pickerS.setStartDate(moment(string.split(pickerS.locale.separator)[0], format));
                pickerS.setEndDate(moment(string.split(pickerS.locale.separator)[1], format));
            }


            // // mobilon a hatter ezzel nem mozog, nem gorgeti
            // dateField.on('show.daterangepicker', function(ev, picker) {
            //     picker.parentEl.addClass('daterangepicker-overflow-hiddenX');
            // });
            // // ujra gorgetheto a hatter
            // dateField.on('hide.daterangepicker', function(ev, picker) {
            //     picker.parentEl.removeClass('daterangepicker-overflow-hiddenX');
            // });
            dateField.on('apply.daterangepicker', function(ev, picker) {
                $(this).val(picker.startDate.format(format) + picker.locale.separator + picker.endDate.format(format));
                // $(this).focus();
                picker.hide();
            });
            dateField.on('cancel.daterangepicker', function(ev, picker) {
                picker.startDate = moment();
                picker.endDate = moment();
                $(this).val('');
            });
            $('#JS--idosav .JS--clearDate').on('click', function(ev) {
                ev.preventDefault();
                dateField.val('');
                dateField.data('daterangepicker').setStartDate(moment());
                dateField.data('daterangepicker').setEndDate(moment());
            });


            // dateFieldSidebar.on('show.daterangepicker', function(ev, pickerS) {
            //     pickerS.parentEl.addClass('daterangepicker-overflow-hiddenX');
            // });
            // // ujra gorgetheto a hatter
            // dateFieldSidebar.on('hide.daterangepicker', function(ev, pickerS) {
            //     pickerS.parentEl.removeClass('daterangepicker-overflow-hiddenX');
            // });
            dateFieldSidebar.on('apply.daterangepicker', function(ev, pickerS) {
                $(this).val(pickerS.startDate.format(format) + pickerS.locale.separator + pickerS.endDate.format(format));
                // $(this).focus();
                pickerS.hide();
            });
            dateFieldSidebar.on('cancel.daterangepicker', function(ev, pickerS) {
                pickerS.startDate = moment();
                pickerS.endDate = moment();
                $(this).val('');
            });
            $('#JS--idosavS .JS--clearDateS').on('click', function(ev) {
                ev.preventDefault();
                dateFieldSidebar.val('');
                dateFieldSidebar.data('daterangepicker').setStartDate(moment());
                dateFieldSidebar.data('daterangepicker').setEndDate(moment());
            });
        });
    </script>
{% endblock %}


